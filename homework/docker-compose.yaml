version: "3"

services:
  user-svc:
    image: "user-svc:dev"
    build:
      context: "./user"
    networks:
      - "frontend"
      - "backend"
      - "userdomain"
    expose:
      - "4010"
    depends_on:
      - "user-microservice"
    environment:
      NODE_ENV: "test"
      URL: "localhost"
      PORT: "4010"
      DB_NAME: "postgres"
      DB_HOST: "localhost"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
    restart: "on-failure"

  auth-svc:
    image: "auth-svc:dev"
    build:
      context: "./auth"
    networks:
      - "frontend"
      - "backend"
      - "authdomain"
    expose:
      - "4000"
    environment:
      NODE_ENV: "test"
      URL: "localhost"
      PORT: "4000"
    restart: "on-failure"

  api-gateway:
    image: "api-gateway:dev"
    build:
      context: "./api-gateway"
    networks:
      - "frontend"
    ports:
      - "3000:3000"
    depends_on:
      - "user-svc"
      - "auth-svc"
    environment:
      NODE_ENV: "test"
      PORT: "3000"
      USER_SVC_URL: "localhost"
      USER_SVC_PORT: "4000"
      AUTH_SVC_URL: "organizations-svc"
      AUTH_PORT: "4010"
    healthcheck:
      test: ["CMD", "wget", "localhost:3000/healthz -q -O - > /dev/null 2>&1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: "on-failure"

  user-db:
    image: "postgres"
    networks:
      - "userdomain"
    expose:
      - "5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "su -c 'pg_isready -U postgres' postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: "on-failure"

  organizations-db:
    image: "postgres:12.1-alpine"
    networks:
      - "organizationsdomain"
    expose:
      - "5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "su -c 'pg_isready -U postgres' postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: "on-failure"

networks:
  frontend:
  backend:
  userdomain:
  authdomain:
